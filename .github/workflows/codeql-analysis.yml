name: MinGW
on: [push, pull_request]

# Notes:
# Actions console encoding causes issues, see test-all & test-spec steps
#
jobs:
  make:
    runs-on: windows-2019
    env:
      MSYSTEM: MINGW64
      MSYSTEM_PREFIX: /mingw64
      MSYS2_ARCH: x86_64
      CHOST: "x86_64-w64-mingw32"
      CFLAGS:   "-march=x86-64 -mtune=generic -O3 -pipe -fstack-protector-strong"
      CXXFLAGS: "-march=x86-64 -mtune=generic -O3 -pipe"
      CPPFLAGS: "-D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -DFD_SETSIZE=2048"
      LDFLAGS:  "-pipe -fstack-protector-strong"
      UPDATE_UNICODE: "UNICODE_FILES=. UNICODE_PROPERTY_FILES=. UNICODE_AUXILIARY_FILES=. UNICODE_EMOJI_FILES=."
    strategy:
      matrix:
        test_task: [ "check" ] # to make job names consistent
      fail-fast: false

    steps:
      - run: mkdir build
        working-directory:
      - name: git config
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf
          git config --system advice.detachedHead 0
      - uses: actions/checkout@v2
        with:
          path: src
      - name: Set up & MSYS2
        uses: MSP-Greg/setup-ruby-pkgs@v1
        with:
          mingw: _upgrade_ openssl readline gcc
      - name: where check
        run: |
          # show where
          Write-Host
          $where = 'gcc.exe', 'make.exe', 'libcrypto-1_1-x64.dll', 'libssl-1_1-x64.dll'
          foreach ($e in $where) {
            $rslt = where.exe $e 2>&1 | Out-String
            if ($rslt.contains($e)) { Write-Host $rslt }
            else { Write-Host "`nCan't find $e" }
          }
      - name: update
        run: |
          $jobs = [int](2 * $env:NUMBER_OF_PROCESSORS)
          make -j $jobs incs

      - name: make install
        run: |
          # Actions uses UTF8, causes test failures, similar to normal OS setup
          $PSDefaultParameterValues['*:Encoding'] = 'utf8'
          [Console]::OutputEncoding = [System.Text.Encoding]::GetEncoding("IBM437")
          [Console]::InputEncoding  = [System.Text.Encoding]::GetEncoding("IBM437")
          make DESTDIR=.. install

      - name: test
        timeout-minutes: 5
        run: |
          make test

defaults:
  run:
    working-directory: build
